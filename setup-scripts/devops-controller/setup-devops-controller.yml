---
##
# https://play.instruqt.com/redhat/tracks/devops-controller/
#
# Tags:
# <challenge-slug>-check - check challenge
# <challenge-slug>-solve - solve challenge
# <challenge-slug>-setup - setup challenge
##

- name: Check, solve and setup devops-controller
  hosts: automationcontroller
  gather_facts: false

  vars_files:
    - track_vars.yml

  vars:
    controller_login: &controller_login
      controller_username: "{{ controller_username }}"
      controller_password: "{{ controller_password }}"
      controller_host: "{{ controller_hostname }}.{{ lookup('env', '_SANDBOX_ID') }}.svc.cluster.local"
      validate_certs: "{{ controller_validate_certs }}"

  tasks:
    # Instruqt DNS entry point 127.0.0.1 for controller which fails using EEs.
    # Have to update objects with $_SANDBOX_ID in FQDN.
    - name: Setup initial environment
      tags:
        - setup-env
      block:
        - name: Wait for controller availability
          ansible.builtin.uri:
            url: "https://{{ controller_login.controller_host }}/api/v2/ping/"
            method: GET
            user: "{{ controller_login.controller_username }}"
            password: "{{ controller_login.controller_password }}"
            validate_certs: false
          register: __controller_check
          until:
            - __controller_check.json is defined
            - __controller_check.json.instances[0].capacity > 0
            - __controller_check.json.instance_groups[0].capacity > 0
          retries: 20
          delay: 1

        - name: Update lab inventory with Instruqt FQDN
          awx.awx.inventory:
            name: "{{ item.name }}"
            organization: "{{ item.organization }}"
            description: "{{ item.description }}"
            variables: "{{ item.variables | default(omit) }}"
            <<: *controller_login
          loop: "{{ controller_inventories }}"
          when: controller_inventories is defined

        # Temp
        # - name: Ensure static hosts are enabled
        #   awx.awx.host:
        #     name: "{{ item.name }}"
        #     inventory: "{{ item.inventory }}"
        #     state: "{{ item.state | default('present') }}"
        #     enabled: "{{ item.enabled | default(true) }}"
        #     variables: "{{ item.variables | default(omit) }}"
        #     <<: *controller_login
        #   loop: "{{ controller_hosts }}"
        #   when: controller_hosts is defined

    ## Challenges check and solve
    # update-pipeline
    - name: Check controller job ran successfully - {{ lab_jt_name }}
      awx.awx.job_list:
        status: successful
        query:
          name: "{{ lab_jt_name }}"
        <<: *controller_login
      register: __controller_job_check
      failed_when: not __controller_job_check.results
      tags:
        - update-pipeline-check

    - name: Run job template solve - {{ lab_jt_name }}
      awx.awx.job_launch:
        job_template: "{{ lab_jt_name }}"
        wait: true
        <<: *controller_login
      register: __controller_job_run
      until: __controller_job_run is success
      retries: 10
      delay: 1
      tags:
        - update-pipeline-solve

## update-app
    - name: Update-app-solve generate Jenkins crumb
      ansible.builtin.uri:
        url: https://jenkins:6443/crumbIssuer/api/json
        mode: json
        force_basic_auth: true
        url_username: "{{ student_user }}"
        url_password: "{{ student_password }}"
        validate_certs: false
        return_content: true
      register: __jenkins_crumb
      tags:
        - update-app-solve
        - update-app-solve-jenkins
        - controller-approval-solve

    - name: Update-app-solve get ACMECorp builds
      ansible.builtin.uri:
        headers:
          Cookie: "{{ __jenkins_crumb.cookies_string }}"
          Jenkins-Crumb: "{{ __jenkins_crumb.json.crumb }}"
        url: https://jenkins:6443/job/ACMECorp/api/json?pretty=true&tree=builds[number,status,url]
        method: GET
        force_basic_auth: true
        url_username: "{{ student_user }}"
        url_password: "{{ student_password }}"
        return_content: true
        validate_certs: false
      register: __jenkins_builds
      tags:
        - update-app-solve
        - update-app-solve-jenkins
        - controller-approval-solve

    - name: Update-app-solve cancel ACMECorp Jenkins builds
      ansible.builtin.uri:
        headers:
          Cookie: "{{ __jenkins_crumb.cookies_string }}"
          Jenkins-Crumb: "{{ __jenkins_crumb.json.crumb }}"
        url: "https://jenkins:6443/job/ACMECorp/{{ item.number }}/doDelete/api/json"
        method: POST
        mode: json
        force_basic_auth: true
        url_username: "{{ student_user }}"
        url_password: "{{ student_password }}"
        return_content: true
        validate_certs: false
        follow_redirects: true
        status_code: 200
      register: __remove_jenkins_builds
      failed_when: false
      when:
        - __jenkins_builds.json.builds is defined
        - __jenkins_builds.json.builds | length > 0
      loop: "{{ __jenkins_builds.json.builds }}"
      tags:
        - update-app-solve
        - update-app-solve-jenkins
        - controller-approval-solve

    # Need delay to give time for DevOps Workflow to start for check
    - name: Update-app-check Get running DevOps jobs
      ansible.builtin.uri:
        url: "https://{{ controller_hostname }}/api/v2/workflow_jobs/?name={{ lab_jt_name | urlencode }}"
        method: GET
        force_basic_auth: true
        url_username: "{{ controller_username }}"
        url_password: "{{ controller_password }}"
        return_content: true
        validate_certs: false
      register: __jt_devops_jobs_running
      until: __jt_devops_jobs_running is search('running')
      delay: 1
      retries: 35
      tags:
        - update-app-check-workflow-jt

    - name: Update-app-solve stop DevOps workflow jobs # noqa jinja[invalid]
      ansible.builtin.uri:
        url: "https://{{ controller_hostname }}/api/v2/workflow_jobs/{{ item.id }}/cancel/"
        method: POST
        force_basic_auth: true
        url_username: "{{ controller_username }}"
        url_password: "{{ controller_password }}"
        return_content: true
        validate_certs: false
        status_code: [202]
      register: __devops_jt_jobs_cancel
      loop: "{{ query( 'awx.awx.controller_api', 'workflow_jobs',
                        username=controller_username,
                        password=controller_password,
                        verify_ssl=controller_validate_certs,
                        query_params={ 'name': lab_jt_name } ) | list  }}"
      when:
        - item.status != 'canceled'
        - item.status != 'successful'
        - item.status != 'failed'
      tags:
        - update-app-solve-workflow-jt
        - update-app-solve
        - controller-approval-solve

    - name: Update-app - home.html edits
      ansible.builtin.lineinfile:
        state: present
        path: "~{{ student_user }}/acme_corp/app/lets_quiz/templates/quiz/home.html"
        insertafter: '        <!-- FIX ME -->'
        search_string: '<p class="display-4 d-none d-sm-block">Test your skills and become a master.</p>'
        line: '        <p class="display-4 d-none d-sm-block">The latest and greatest version of the app deployed successfully.</p>'
      check_mode: "{{ home_page_check_mode | default(false) }}"
      register: __home_page_edits
      tags:
        - update-app-check-home-page
        - update-app-solve

    - name: Update-app - debug home page edits
      ansible.builtin.debug:
        var: __home_page_edits
        verbosity: 2
      tags:
        - update-app-check-home-page
        - update-app-solve

    - name: Update-app - check if home.html was changed
      ansible.builtin.assert:
        that:
          - not __home_page_edits.changed
        fail_msg: The home.html page does not contain the correct line
      tags:
        - update-app-check-home-page

    - name: Gather controller facts
      ansible.builtin.setup:
      tags:
        - update-app-solve
        - controller-approval-solve

    # This is to trigger the pipeline each time the solve script runs
    - name: Update-app-solve add date/time line
      ansible.builtin.lineinfile:
        state: present
        path: "~{{ student_user }}/acme_corp/app/lets_quiz/manage.py"
        search_string: '# solve-script-run '
        line: '# solve-script-run {{ ansible_date_time.iso8601 }}'
      check_mode: "{{ home_page_check_mode | default(false) }}"
      register: __home_page_edits
      tags:
        - update-app-solve
        - controller-approval-solve

    - name: Update-app solve push code to repo
      ansible.builtin.command:
        cmd: "{{ item }}"
        chdir: "~{{ student_user }}/acme_corp"
      become: true
      become_user: "{{ student_user }}"
      loop:
        - "git add ."
        - "git commit -m'Updated home.html'"
        - "git push -u origin main --force"
      tags:
        - update-app-solve
        - controller-approval-solve

    - name: Update-app - check Jenkins pipeline started
      environment:
        PYTHONHTTPSVERIFY: 0
      community.general.jenkins_job_info:
        name: "ACMECorp"
        url: https://jenkins:6443
        user: "{{ student_user }}"
        password: "{{ student_password }}"
        validate_certs: false
      register: __jenkins_job_status
      until: __jenkins_job_status.jobs is search('anime')
      delay: 3
      retries: 6
      tags:
        - update-app-check-pipeline

  ## controller-approval
    - name: Controller-approval-check get success approvals
      ansible.builtin.uri:
        url: "https://{{ controller_hostname }}/api/v2/workflow_approvals/?name={{ 'Deploy to Prod?' | urlencode }}&status=successful"
        method: GET
        force_basic_auth: true
        url_username: "{{ controller_username }}"
        url_password: "{{ controller_password }}"
        return_content: true
        validate_certs: false
      register: __workflow_approval_success
      until: __workflow_approval_success.json.count > 0
      delay: 3
      retries: 8
      tags:
        - controller-approval-check-approval

    - name: Controller-approval-check DevOps Workflow
      ansible.builtin.uri:
        url: "https://{{ controller_hostname }}/api/v2/workflow_jobs/?name={{ lab_jt_name | urlencode }}&status=successful"
        method: GET
        force_basic_auth: true
        url_username: "{{ controller_username }}"
        url_password: "{{ controller_password }}"
        return_content: true
        validate_certs: false
      register: __jt_devops_jobs_success
      until: __jt_devops_jobs_success.json.count > 0
      delay: 1
      retries: 30
      tags:
        - controller-approval-check-workflow-jt

    - name: Controller-approval-check home page
      ansible.builtin.uri:
        url: "http://{{ controller_hostname }}:8000"
        method: GET
        validate_certs: false
        status_code: 200
        return_content: true
      register: __home_page_status
      until: __home_page_status.status == 200
      failed_when: __home_page_status.content is not search('The latest and greatest version of the app deployed successfully.')
      delay: 1
      retries: 15
      tags:
        - controller-approval-check-home-page

    - name: Controller-approval-solve get pending approvals
      ansible.builtin.uri:
        url: "https://{{ controller_hostname }}/api/v2/workflow_approvals/?name={{ 'Deploy to Prod?' | urlencode }}&status=pending"
        method: GET
        force_basic_auth: true
        url_username: "{{ controller_username }}"
        url_password: "{{ controller_password }}"
        return_content: true
        validate_certs: false
      register: __workflow_approval_pending
      until: __workflow_approval_pending.json.count > 0
      delay: 1
      retries: 25
      tags:
        - controller-approval-solve

    - name: Controller-approval-solve approve pending workflow
      awx.awx.workflow_approval:
        workflow_job_id: "{{ item.summary_fields.source_workflow_job.id }}"
        name: "Deploy to Prod?"
        interval: 2
        timeout: 10
        action: approve
        <<: *controller_login
      loop: "{{ __workflow_approval_pending.json.results }}"
      tags:
        - controller-approval-solve
