#!/usr/bin/python3

import subprocess, os
import yaml
import shlex

# Vars
setup_scripts_path="/opt/setup-scripts/getting-started-mesh/"
extra_vars_file = open("/opt/setup-scripts/getting-started-mesh/track_vars.yml")
parsed_extra_vars_file = yaml.load(extra_vars_file, yaml.loader.FullLoader)
os.environ["ANSIBLE_CONFIG"] = setup_scripts_path+"ansible.cfg"

# Check job templates executed with correct inventory
for key,val in parsed_extra_vars_file.items():
    if key == "lab_dbn_check_job_templates":
        for job_template in parsed_extra_vars_file[key]:
            lab_inv_jt_output = subprocess.run(["ansible-playbook", setup_scripts_path+"getting-started-mesh-setup.yml",
                                                "-e", "lab_inv_name="+shlex.quote(job_template["jt_inventory"]),
                                                "-e", "lab_jt_name="+shlex.quote(job_template["jt_name"]),
                                                "--tags", "high-availability-check-jt"])
            if lab_inv_jt_output.returncode > 0:
                print ( "FAIL: Please make sure you've run the " + job_template["jt_name"] + " job template using the " + job_template["jt_inventory"] + " inventory." )
                exit(1)
    # Check if instance state is healthy
    if key == "lab_dbn_check_instance_name":
        lab_instance_health_output = subprocess.run(["ansible-playbook", setup_scripts_path+"getting-started-mesh-setup.yml",
                                                    "-e", "lab_dbn_check_instance_name="+shlex.quote(val),
                                                    "-i", setup_scripts_path+"inventory.ini",
                                                    "--tags", "high-availability-check-instance"])
        if lab_instance_health_output.returncode > 0:
            print ( "FAIL: " + val + " is in an unhealthy state. Please make sure you execute the 'Setup Dublin hop node' job template." )
            exit(1)